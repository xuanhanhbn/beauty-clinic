{"ast":null,"code":"import React from\"react\";import{useSelector}from\"react-redux\";import{createTheme,CssBaseline,ThemeProvider}from\"@mui/material\";import{getDesignTokens}from\"lib/themes\";import{renderRoutes}from\"react-router-config\";import{SnackbarProvider}from\"notistack\";import routes from\"routes\";import{Router}from\"react-router-dom\";import{createBrowserHistory}from\"history\";import{ThemeProvider as ThemeProviderLegacy}from\"@mui/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var history=createBrowserHistory();function App(){var mode=useSelector(function(state){return state.Web.mode;});// const dispatch = useDispatch();\n// // Get mode from cookie in the first access page\n// useEffect(() => {\n//   const currentBrowserTheme =\n//     window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\")\n//       ? \"dark\"\n//       : \"light\";\n//   dispatch(\n//     Actions.Web.update({\n//       key: \"mode\",\n//       value:\n//         cookie.parse(document?.cookie)?.mode?.toString() ||\n//         currentBrowserTheme,\n//     })\n//   );\n// }, []);\n// Update the theme only if the mode changes\nvar theme=React.useMemo(function(){return createTheme(getDesignTokens(mode));},[mode]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(ThemeProviderLegacy,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(SnackbarProvider,{maxSnack:3,children:/*#__PURE__*/_jsx(Router,{history:history,children:renderRoutes(routes)})})]})});}export default App;","map":{"version":3,"names":["React","useSelector","createTheme","CssBaseline","ThemeProvider","getDesignTokens","renderRoutes","SnackbarProvider","routes","Router","createBrowserHistory","ThemeProviderLegacy","history","App","mode","state","Web","theme","useMemo"],"sources":["/Users/leo/Documents/GitHub/demo-beauty/training-react-template/src/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Actions } from \"./store\";\nimport { createTheme, CssBaseline ,ThemeProvider} from \"@mui/material\";\nimport { getDesignTokens } from \"lib/themes\";\nimport { renderRoutes } from \"react-router-config\";\nimport { SnackbarProvider } from \"notistack\";\nimport { RootState } from \"store/reducers\";\nimport cookie from \"cookie\";\nimport routes from \"routes\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { ThemeProvider as ThemeProviderLegacy} from \"@mui/styles\";\n\nconst history: any = createBrowserHistory();\n\nfunction App() {\n  const mode = useSelector((state: RootState) => state.Web.mode);\n  // const dispatch = useDispatch();\n\n  // // Get mode from cookie in the first access page\n  // useEffect(() => {\n  //   const currentBrowserTheme =\n  //     window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\")\n  //       ? \"dark\"\n  //       : \"light\";\n  //   dispatch(\n  //     Actions.Web.update({\n  //       key: \"mode\",\n  //       value:\n  //         cookie.parse(document?.cookie)?.mode?.toString() ||\n  //         currentBrowserTheme,\n  //     })\n  //   );\n  // }, []);\n  // Update the theme only if the mode changes\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  return (\n    <ThemeProvider theme={theme}>\n      <ThemeProviderLegacy theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3}>\n        <Router history={history}>{renderRoutes(routes)}</Router>\n      </SnackbarProvider>\n      </ThemeProviderLegacy >\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAiC,OAAjC,CACA,OAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,aAAnC,KAAuD,eAAvD,CACA,OAASC,eAAT,KAAgC,YAAhC,CACA,OAASC,YAAT,KAA6B,qBAA7B,CACA,OAASC,gBAAT,KAAiC,WAAjC,CAGA,MAAOC,OAAP,KAAmB,QAAnB,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASN,aAAa,GAAIO,oBAA1B,KAAoD,aAApD,C,wFAEA,GAAMC,QAAY,CAAGF,oBAAoB,EAAzC,CAEA,QAASG,IAAT,EAAe,CACb,GAAMC,KAAI,CAAGb,WAAW,CAAC,SAACc,KAAD,QAAsBA,MAAK,CAACC,GAAN,CAAUF,IAAhC,EAAD,CAAxB,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMG,MAAK,CAAGjB,KAAK,CAACkB,OAAN,CAAc,iBAAMhB,YAAW,CAACG,eAAe,CAACS,IAAD,CAAhB,CAAjB,EAAd,CAAwD,CAACA,IAAD,CAAxD,CAAd,CACA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEG,KAAtB,uBACE,MAAC,mBAAD,EAAqB,KAAK,CAAEA,KAA5B,wBACA,KAAC,WAAD,IADA,cAEA,KAAC,gBAAD,EAAkB,QAAQ,CAAE,CAA5B,uBACE,KAAC,MAAD,EAAQ,OAAO,CAAEL,OAAjB,UAA2BN,YAAY,CAACE,MAAD,CAAvC,EADF,EAFA,GADF,EADF,CAUD,CAED,cAAeK,IAAf"},"metadata":{},"sourceType":"module"}