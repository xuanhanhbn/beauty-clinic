{"ast":null,"code":"import { TYPES } from \"./actions\";\nconst initialState = {\n  mode: \"light\"\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case TYPES.UPDATE_WEB_MODE:\n      const updateProps = actions.props;\n      return { ...state,\n        [updateProps.key]: updateProps.value\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["TYPES","initialState","mode","state","actions","type","UPDATE_WEB_MODE","updateProps","props","key","value"],"sources":["/Users/leo/Documents/GitHub/demo-beauty/training-react-template/src/store/web/reducers.ts"],"sourcesContent":["import { PaletteMode } from \"@mui/material\";\nimport { TYPES, WebUpdateProps } from \"./actions\";\n\nexport type WebState = {\n  mode: PaletteMode;\n};\n\nconst initialState: WebState = {\n  mode: \"light\",\n};\n\nexport type PropAction = {\n  type: string;\n  props: WebUpdateProps;\n};\n\nexport default (state: WebState = initialState, actions: PropAction) => {\n  switch (actions.type) {\n    case TYPES.UPDATE_WEB_MODE:\n      const updateProps: WebUpdateProps = actions.props;\n      return {\n        ...state,\n        [updateProps.key]: updateProps.value,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AACA,SAASA,KAAT,QAAsC,WAAtC;AAMA,MAAMC,YAAsB,GAAG;EAC7BC,IAAI,EAAE;AADuB,CAA/B;AASA,gBAAe,YAAyD;EAAA,IAAxDC,KAAwD,uEAAtCF,YAAsC;EAAA,IAAxBG,OAAwB;;EACtE,QAAQA,OAAO,CAACC,IAAhB;IACE,KAAKL,KAAK,CAACM,eAAX;MACE,MAAMC,WAA2B,GAAGH,OAAO,CAACI,KAA5C;MACA,OAAO,EACL,GAAGL,KADE;QAEL,CAACI,WAAW,CAACE,GAAb,GAAmBF,WAAW,CAACG;MAF1B,CAAP;;IAIF;MACE,OAAOP,KAAP;EARJ;AAUD,CAXD"},"metadata":{},"sourceType":"module"}